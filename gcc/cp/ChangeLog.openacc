2017-01-10  Chung-Lin Tang  <cltang@codesourcery.com>

	PR other/76739
	* semantics.c (handle_omp_array_sections_1): Add 'bool &non_contiguous'
	parameter, adjust recursive call site, add cases for allowing
	pointer based multi-dimensional arrays for OpenACC.
	(handle_omp_array_sections): Adjust handle_omp_array_sections_1 call,
	handle non-contiguous case to create dynamic array map.

2016-08-17  Thomas Schwinge  <thomas@codesourcery.com>

	* parser.c (cp_finalize_oacc_routine): Rework checking if already
	marked as an accelerator routine.

2016-08-17  Thomas Schwinge  <thomas@codesourcery.com>

	* parser.c (cp_parser_oacc_routine)
	(cp_parser_late_parsing_oacc_routine): Normalize order of clauses.
	(cp_finalize_oacc_routine): Call oacc_verify_routine_clauses.

2016-08-17  Thomas Schwinge  <thomas@codesourcery.com>

	* parser.c (cp_parser_oacc_shape_clause): Add loc formal
	parameter.  Adjust all users.

2016-05-27  Cesar Philippidis  <cesar@codesourcery.com>

	* semantics.c (finish_omp_clauses): Add specific errors and
	warning messages for OpenACC.  Use firsrtprivate pointers for
	OpenACC subarrays.  Update call to handle_omp_array_sections.

2015-07-17  Julian Brown  <julian@codesourcery.com>

	* pt.c (tsubst_omp_clauses): Handle OMP_CLAUSE_DEVICE_TYPE.
	* semantics.c (finish_omp_clauses): Likewise.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* parser.c (cp_parser_omp_clause_name): Add consume_token formal
	parameter.  Handle "device_type", "dtype".
	(cp_parser_oacc_clause_device_type): New function.
	(cp_parser_oacc_all_clauses): Add dtype_mask, and scan_dtype
	formal parameters.  Adjust all users.  Handle
	PRAGMA_OACC_CLAUSE_DEVICE_TYPE.

2016-01-07  Cesar Philippidis  <cesar@codesourcery.com>

	* cp-tree.h (bind_decls_match): Declare.
	* decl.c (bind_decls_match): New function.
	* parser.c (cp_parser_oacc_clause_bind): Remove TODOs and useless
	namespace checks.  Defer string-ifying bind clauses with identifiers.
	Check for empty identifier strings.
	(cp_parser_oacc_routine): Clean up the pragma parser after
	detecting a non-pragma_external context.  Remove useless namespace
	check.
	(cp_finalize_oacc_routine): Handle bind clauses with identifiers.

2015-12-08  Thomas Schwinge  <thomas@codesourcery.com>

	* parser.c (cp_parser_oacc_clause_bind, cp_parser_oacc_routine)
	(cp_finalize_oacc_routine): Update.
	* pt.c (tsubst_omp_clauses): Handle OMP_CLAUSE_BIND,
	OMP_CLAUSE_NOHOST.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* parser.c (cp_parser_omp_clause_name): Handle "bind", "nohost".
	(cp_parser_oacc_clause_bind): New function.
	(cp_parser_oacc_all_clauses): Handle PRAGMA_OACC_CLAUSE_BIND,
	PRAGMA_OACC_CLAUSE_NOHOST.
	* semantics.c (finish_omp_clauses): Handle OMP_CLAUSE_BIND,
	OMP_CLAUSE_NOHOST.

2015-06-10  Joseph Myers  <joseph@codesourcery.com>

	* parser.c (cp_parser_omp_var_list_no_open): Handle RID_THIS.
	* semantics.c (handle_omp_array_sections_1)
	(handle_omp_array_sections, finish_omp_reduction_clause)
	(finish_omp_clauses): Pass CXX_MARK_ADDRESSABLE_FLAGS_ALLOW_THIS
	to cxx_mark_addressable.
	* typeck.c (cxx_mark_addressable): Handle
	CXX_MARK_ADDRESSABLE_FLAGS_ALLOW_THIS.

2016-07-06  Thomas Schwinge  <thomas@codesourcery.com>

	* cp-tree.h (enum cxx_mark_addressable_flags): New.
	(cxx_mark_addressable): Use it.  Adjust users.

2015-05-11  James Norris  <jnorris@codesourcery.com>

	* parser.c (cp_parser_oacc_enter_exit_data): Use existing local
	variable.

2015-05-11  James Norris  <jnorris@codesourcery.com>

        * parser.c (cp_parser_oacc_wait_list): Change error message.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* cp-gimplify.c (cxx_omp_clause_copy_ctor): Handle OMP_CLAUSE_MAP.

2018-05-18  Cesar Philippidis  <cesar@codesourcery.com>

	PR c++/85782
	* cp-gimplify.c (cp_genericize_r): Call genericize_omp_for_stmt for
	OACC_LOOPs.

Copyright (C) 2015-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
