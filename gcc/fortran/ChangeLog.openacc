2017-07-12  Thomas Schwinge  <thomas@codesourcery.com>

	* trans-stmt.c (gfc_trans_deallocate): Call
	gfc_trans_oacc_declare_allocate for decls with oacc_declare_create
	attributes set.

2017-04-05  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (enum gfc_omp_map_op): Add OMP_MAP_DECLARE_ALLOCATE,
	OMP_MAP_DECLARE_DEALLOCATE.
	* openmp.c (gfc_match_oacc_declare): Add support for OMP_MAP_ALLOC and
	OMP_MAP_TO, as those match the OpenACC 2.5 semantics.
	* trans-array.c (gfc_array_allocate): Call
	gfc_trans_oacc_declare_allocate for decls with oacc_declare_create
	attributes set.
	* trans-decl.c (add_attributes_to_decl): Enable lowering of OpenACC
	declared create, copyin and deviceptr clauses.
	(add_clause): Don't duplicate OpenACC declare clauses.
	(find_module_oacc_declare_clauses): Relax oacc_declare_create to
	OMP_MAP_ALLOC, and oacc_declare_copying to OMP_MAP_TO.  This matches
	the OpenACC 2.5 semantics.
	* trans-openmp.c (gfc_trans_omp_clauses_1): Handle
	OMP_MAP_DECLARE_{ALLOCATE,DEALLOCATE}.
	(gfc_trans_oacc_declare_allocate): New function.
	* trans-stmt.h: Declare gfc_trans_oacc_declare_allocate.

2017-03-31  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_trans_omp_clauses_1): Update handling of
	subarrays with derived types elements.

2017-03-14  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-stmt.h: Remove stale reference to trans-openacc.c.

2017-02-22  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_trans_oacc_combined_directive): Set the
	location of combined acc loops.

2017-02-02  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_omp_finish_clause): Don't emit
	GOMP_MAP_FIRSTPRIVATE_POINTER for pointers to reference types.
	(gfc_trans_omp_clauses_1): Likewise.

2017-01-27  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_omp_finish_clause): Use GOMP_MAP_POINTER
	for POINTER_TYPE decls.
	(gfc_trans_omp_clauses_1): Likewise.

2017-01-27  Cesar Philippidis  <cesar@codesourcery.com>

	* openmp.c (gfc_resolve_oacc_blocks): Populate list of private
	variables.

2016-11-10  Cesar Philippidis  <cesar@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>

	* openmp.c (gfc_match_omp_variable_list): New allow_derived argument.
	(gfc_match_omp_map_clause): Update call to
	gfc_match_omp_variable_list.
	(gfc_match_omp_clauses): Update calls to gfc_match_omp_map_clause.
	(gfc_match_oacc_update): Update call to gfc_match_omp_clauses.
	(resolve_omp_clauses): Permit derived type variables in ACC UPDATE
	clauses.
	* trans-openmp.c (gfc_trans_omp_clauses_1): Lower derived type
	members.

2016-10-03  Cesar Philippidis  <cesar@codesourcery.com>

	* openmp.c (resolve_positive_int_expr): Promote the warning to an
	error.

2016-09-15  Cesar Philippidis  <cesar@codesourcery.com>

	* openmp.c (gfc_match_omp_map_clause): Add new common_blocks argument.
	Propagate it to gfc_match_omp_variable_list.
	(gfc_match_omp_clauses): Update calls to gfc_match_omp_map_clauses.

2017-07-03  Thomas Schwinge  <thomas@codesourcery.com>

	* trans-openmp.c (gfc_omp_finish_clause): Disable "implicit
	mapping of assumed size array" error.

2016-08-29  Cesar Philippidis  <cesar@codesourcery.com>

	PR fortran/72715
	* openmp.c (resolve_oacc_nested_loops): Error on do concurrent loops.

2016-08-26  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (enum oacc_function): Make OACC_FUNCTION_SEQ the last
	entry the enum.
	(gfc_oacc_routine_name): Add a loc member.
	(gfc_resolve_oacc_routine_call): Declare.
	(gfc_resolve_oacc_routines): Declare.
	* openmp.c (gfc_match_oacc_routine): Make error reporting more
	precise.  Defer rejection of non-function and subroutine symbols
	until gfc_resolve_oacc_routines.
	(struct fortran_omp_context): Add a dims member.
	(gfc_resolve_oacc_blocks): Update ctx->dims.
	(gfc_resolve_oacc_routine_call): New function.
	(gfc_resolve_oacc_routines): New function.
	* resolve.c (resolve_function): Call gfc_resolve_oacc_routine_call.
	(resolve_call): Likewise.
	(resolve_codes): Call gfc_resolve_oacc_routines.

2016-08-16  Cesar Philippidis  <cesar@codesourcery.com>

	PR fortran/72741
	* openmp.c (gfc_match_oacc_routine): Error on repeated ACC ROUTINE
	directives.  Consider the optional NAME argument being the current
	procedure name.
	* trans-decl.c (add_attributes_to_decl): Use build_oacc_routine_dims
	to construct the oacc_function attribute arguments.

2016-08-12  Cesar Philippidis  <cesar@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>

	PR fortran/72741
	* openmp.c (gfc_match_oacc_routine): Check clauses of intrinsic
	functions.

2016-07-28  Cesar Philippidis  <cesar@codesourcery.com>

	PR fortran/72741
	* openmp.c (gfc_oacc_routine_dims): Move gfc_error to
	gfc_match_oacc_routine.  Return OACC_FUNCTION_NONE on error.
	(gfc_match_oacc_routine): Call gfc_oacc_routine_dims for all
	routines directives.  Propagate error as appropriate.

2016-07-27  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (enum oacc_function): Define.
	(oacc_function_type): Declare.
	(symbol_attribute): Change the type of oacc_function from unsigned
	to an ENUM_BITFIELD.
	* module.c (oacc_function): New DECL_MIO_NAME.
	(mio_symbol_attribute): Set the oacc_function attribute.
	* openmp.c (gfc_oacc_routine_dims): Change the return type from
	int to oacc_function.
	(gfc_match_oacc_routine): Handle intrinsic procedures.
	* symbol.c (oacc_function_types): Define.
	* trans-decl.c (add_attributes_to_decl): Update to handle the
	retyped oacc_function attribute.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	* gfortran.h (gfc_omp_clauses): Add device_types, dtype_clauses
	members.
	Add gfc_copy_omp_namelist prototype.
	* match.c: Add gfc_copy_omp_namelist definition.
	* openmp.c (gfc_free_omp_clauses): Recursively deallocate
	device_type clauses.
	(omp_mask2): Add OMP_CLAUSE_DEVICE_TYPE.
	(gfc_match_omp_clauses, match_acc): Add dtype_mask formal
	parameter.  Adjust all users.  Handle OMP_CLAUSE_DEVICE_TYPE.
	* trans-openmp.c (gfc_trans_omp_clauses): Translate device_type
	clauses, and split old body into...
	(gfc_trans_omp_clauses_1): New function.
	* trans-openmp.c (gfc_filter_oacc_combined_clauses): New function.
	(gfc_trans_oacc_combined_directive): Use it.

2017-03-31  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (struct gfc_omp_clauses): Add bind_name member.
	* match.c (gfc_match_call_name): New function.
	(gfc_match_call): Break out function name parsing to
	gfc_match_call_name.  Call it.
	* match.h (gfc_match_call_named): Declare.
	* openmp.c (gfc_match_oacc_bind_clause): New function.
	(gfc_match_omp_clauses): Call it to parse the bind clause.
	* trans-openmp.c (gfc_trans_omp_clauses_1): Lower OMP_CLAUSE_BIND.

2015-12-08  Thomas Schwinge  <thomas@codesourcery.com>

	* gfortran.h (symbol_attribute): Add oacc_function_nohost member.
	* openmp.c (gfc_match_oacc_routine): Set it.
	* trans-decl.c (add_attributes_to_decl): Use it to decide whether
	to generate an OMP_CLAUSE_NOHOST clause.
	* trans-openmp.c (gfc_trans_omp_clauses_1): Unreachable code to
	generate an OMP_CLAUSE_NOHOST clause.

2015-05-11  James Norris  <jnorris@codesourcery.com>

	* gfortran.h (gfc_omp_clauses): Add routine_bind, nohost members.
	* openmp.c (omp_mask2): Add OMP_CLAUSE_BIND, OMP_CLAUSE_NOHOST.
	(gfc_match_omp_clauses): Handle OMP_CLAUSE_BIND,
	OMP_CLAUSE_NOHOST.

2015-11-27  Thomas Schwinge  <thomas@codesourcery.com>

	* trans-decl.c (add_attributes_to_decl): Identify some presumed
	TODOs.

2015-10-13  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-array.c (gfc_trans_array_bounds): Add an INIT_VLA argument
	to control whether VLAs should be initialized.  Don't mark this
	function as static.
	(gfc_trans_auto_array_allocation): Update call to
	gfc_trans_array_bounds.
	(gfc_trans_g77_array): Likewise.
	* trans-array.h: Declare gfc_trans_array_bounds.
	* trans-openmp.c (gfc_scan_nodesc_arrays): New function.
	(gfc_privatize_nodesc_arrays_1): New function.
	(gfc_privatize_nodesc_arrays): New function.
	(gfc_init_nodesc_arrays): New function.
	(gfc_trans_oacc_construct): Initialize any internal variables for
	arrays without array descriptors inside the offloaded parallel and
	kernels region.
	(gfc_trans_oacc_combined_directive): Likewise.

2015-10-01  Cesar Philippidis  <cesar@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>

	* dump-parse-tree.c (show_omp_clauses): Add missing omp list_types
	and reorder the switch cases to match the enum in gfortran.h.

2015-09-29  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_omp_finish_clause): Don't cast ptr into
	a character pointer.
	(gfc_trans_omp_clauses_1): Likewise.

2015-08-20  Joseph Myers  <joseph@codesourcery.com>

	PR libgomp/81886
	* gfortranspec.c (lang_specific_pre_link): Update call to do_spec.

2015-12-09  James Norris  <jnorris@codesourcery.com>

	* openmp.c (gfc_match_omp_clauses): Re-write handling of the
	deviceptr clause.

2018-05-07  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_omp_finish_clause): Don't create pointer data
	mappings for deviceptr clauses.
	(gfc_trans_omp_clauses): Likewise.

2015-06-08  James Norris  <jnorris@codesourcery.com>

	* openmp.c (gfc_match_oacc_declare): Add handling of
	device_resident and link clauses.

2015-05-13  Bernd Schmidt  <bernds@codesourcery.com>

	* gfortranspec.c (lang_specific_driver): Add -Xoffload options to
	link -lm and -lgfortran.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_omp_clause_copy_ctor): Permit reductions.

2015-05-11  James Norris  <jnorris@codesourcery.com>

	* openmp.c (check_array_not_assumed): Remove pointer check.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (gfc_omp_clauses): Add acc_collapse member.
	* openmp.c (gfc_match_omp_clauses): Handle it.

2018-05-13  Paul Thomas  <pault@gcc.gnu.org>

	PR fortran/85742
	* trans-types.c (gfc_get_dtype_rank_type): Reorder evaluation
	of 'size'. If the element type is a pointer use the size of the
	TREE_TYPE of the type, unless it is VOID_TYPE. In this latter
	case, set the size to zero.

Copyright (C) 2015-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
