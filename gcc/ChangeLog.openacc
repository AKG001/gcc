2016-10-19  Thomas Schwinge  <thomas@codesourcery.com>

	PR other/70945
	* targhooks.c (default_libc_has_function): Update comment.
	* target.def (libc_has_function): Likewise.
	* doc/tm.texi: Regenerate.
	* coretypes.h (enum function_class): Add
	function_glibc_finite_math.
	* config/darwin.c (darwin_libc_has_function): Handle it.
	* lto-streamer.h (enum lto_section_type): Rename
	LTO_section_offload_table to LTO_section_offload_data.  Adjust all
	users.
	* lto-cgraph.c (void output_offload_data): New function, split out
	of output_offload_tables.  Adjust all users.  Stream the target's
	function_glibc_finite_math property.
	(input_offload_data): New function, split out of
	input_offload_tables.  Adjust all users.  Handle mismatch between
	the target's and the offloading target's
	function_glibc_finite_math property.

2016-10-02  Chung-Lin Tang  <cltang@codesourcery.com>

	PR fortran/77371
	* omp-low.c (lower_omp_target): Avoid reference-type processing
	on pointers for firstprivate clause.
	* gimplify.c (gimplify_adjust_omp_clauses): Add 'remove = true'
	when emitting error on private/firstprivate reductions.

2016-09-15  Cesar Philippidis  <cesar@codesourcery.com>

	* gimplify.c (oacc_default_clause): Privatize fortran common blocks.
	(omp_notice_variable): Defer the expansion of DECL_VALUE_EXPR for
	common block decls.

2017-07-16  Tom de Vries  <tom@codesourcery.com>

	* config/nvptx/nvptx.c (nvptx_propagate_unified): Use next_real_insn to
	find comparison insn.  Assert that comparison is found.

2017-06-30  Tom de Vries  <tom@codesourcery.com>

	* config/nvptx/nvptx.c (nvptx_propagate_unified): Fix gcc_assert
	condition by allowing !INSN_P.

2016-08-31  Nathan Sidwell  <nathan@codesourcery.com>

	* config/nvptx/nvptx.md (cond_uni): New pattern.
	* config/nvptx/nvptx.c (nvptx_propagate_unified): New.
	(nvptx_split_blocks): Call it for cond_uni insn.
	(nvptx_expand_cond_uni): New.
	(enum nvptx_builtins): Add NVPTX_BUILTIN_COND_UNI.
	(nvptx_init_builtins): Initialize it.
	(nvptx_generate_vector_shuffle): Change integral SHIFT operand to
	tree BITS operand.
	(nvptx_vector_reduction): New.
	(nvptx_goacc_reduction_fini): Call it for vector.

2016-08-30  Cesar Philippidis  <cesar@codesourcery.com>

	* omp-low.c (lower_omp_target): Handle NULL-sized types for
	assumed-sized arrays.

2016-08-26  Nathan Sidwell  <nathan@codesourcery.com>

	* ipa-inline-analysis.c (inline_write_summary): Only dump callee
	counts when dumping the function's body.

2016-12-06  Cesar Philippidis  <cesar@codesourcery.com>

	* gimplify.c (gimplify_adjust_omp_clauses_1): Link ACC new clauses
	with the old ones.

2016-08-17  Cesar Philippidis  <cesar@codesourcery.com>

	PR middle-end/70828
	* gimplify.c (struct gimplify_omp_ctx): Add tree clauses member.
	(new_omp_context): Initialize clauses to NULL_TREE.
	(gimplify_scan_omp_clauses): Set clauses in the gimplify_omp_ctx.
	(omp_clause_matching_array_ref): New function.
	(gomp_needs_data_present): New function.
	(gimplify_adjust_omp_clauses_1): Use preset or pointer omp clause map
	kinds when creating implicit data clauses for OpenACC offloaded
	variables defined used an acc data region as necessary.

2016-08-17  Thomas Schwinge  <thomas@codesourcery.com>

	* omp-general.c (oacc_verify_routine_clauses): Change formal
	parameters.  Add checking if already marked as an accelerator
	routine.  Adjust all users.

2016-08-17  Thomas Schwinge  <thomas@codesourcery.com>

	* omp-general.c (oacc_build_routine_dims): Move some of its
	processing into...
	(oacc_verify_routine_clauses): ... this new function.
	* omp-general.h (oacc_verify_routine_clauses): New prototype.

2015-07-24  Cesar Philippidis  <cesar@codesourcery.com>
	    Nathan Sidwell  <nathan@codesourcery.com>

	* lto-cgraph.c (input_overwrite_node): Change the assertion to an
	error for missing symbols.
	(input_varpool_node): Likewise.

2016-05-27  Cesar Philippidis  <cesar@codesourcery.com>

	* gimplify.c (gimplify_scan_omp_clauses): Prune firstprivate
	clause associated with OACC_DATA, OACC_ENTER_DATA and OACC_EXIT
	data regions.
	(gimplify_adjust_omp_clauses): Fix typo in comment.

2016-06-10  Thomas Schwinge  <thomas@codesourcery.com>

	* tree-nested.c (convert_nonlocal_omp_clauses)
	(convert_local_omp_clauses): Handle OMP_CLAUSE_DEVICE_TYPE.

2015-07-17  Julian Brown  <julian@codesourcery.com>

	* gimplify.c (gimplify_scan_omp_clauses): Handle
	OMP_CLAUSE_DEVICE_TYPE.
	(gimplify_adjust_omp_clauses): Likewise.
	* omp-low.c (scan_sharing_clauses): Likewise.
	* omp-expand.c (expand_omp_target): Add "sorry" for device_type
	support.
	* tree-pretty-print.c (dump_omp_clause): Add device_type support.
	* tree.c (walk_tree_1): Likewise.

2015-05-11  Cesar Philippidis  <cesar@codesourcery.com>

	* tree-core.h (omp_clause_code): Add OMP_CLAUSE_DEVICE_TYPE.
	* tree.c (omp_clause_num_ops, omp_clause_code_name): Update for
	that.
	* tree.h (OMP_CLAUSE_DEVICE_TYPE_DEVICES)
	(OMP_CLAUSE_DEVICE_TYPE_CLAUSES): Add macros.

2015-12-28  Nathan Sidwell  <nathan@codesourcery.com>

	* omp-offload.c (maybe_discard_oacc_function): New simplification
	broken out of ...
	(execute_oacc_device_lower): ... here.  Call it.

2015-12-08  Thomas Schwinge  <thomas@codesourcery.com>

	* gimplify.c (gimplify_scan_omp_clauses)
	(gimplify_adjust_omp_clauses): Handle OMP_CLAUSE_BIND,
	OMP_CLAUSE_NOHOST.
	* tree-nested.c (convert_nonlocal_omp_clauses)
	(convert_local_omp_clauses): Likewise.
	* omp-low.c (scan_sharing_clauses): Likewise.
	* omp-offload.c (execute_oacc_device_lower) [ACCEL_COMPILER]:
	Handle OpenACC bind clauses.
	[!ACCEL_COMPILER]: Handle OpenACC nohost clauses.
	* tree-core.h (enum omp_clause_code) <OMP_CLAUSE_BIND>: Update
	description.

2015-10-16  Tom de Vries  <tom@codesourcery.com>

	* tree-pretty-print.c (dump_omp_clause): Handle bind clause.

2015-10-16  Tom de Vries  <tom@codesourcery.com>

	* tree-pretty-print.c (dump_omp_clause): Handle OMP_CLAUSE_NOHOST.

2015-05-11  Joseph Myers  <joseph@codesourcery.com>

	* tree-core.h (omp_clause_code): Add OMP_CLAUSE_BIND,
	OMP_CLAUSE_NOHOST.
	* tree.c (omp_clause_num_ops, omp_clause_code_name, walk_tree_1):
	Update for these.
	* tree.h (OMP_CLAUSE_BIND_NAME): Add macro.

2016-01-21  Thomas Schwinge  <thomas@codesourcery.com>

	* common.opt: Add -foffload-force.
	* lto-wrapper.c (merge_and_complain, append_compiler_options):
	Handle it.
	* doc/invoke.texi: Document it.
	* config/nvptx/mkoffload.c (struct id_map): Add "flags" member.
	(record_id): Parse, and set it.
	(process): Use it.
	* config/nvptx/nvptx.c (nvptx_attribute_table): Add "omp avoid
	offloading".
	(nvptx_record_offload_symbol): Use it.
	(nvptx_goacc_validate_dims): Set it.

2016-01-13  Tom de Vries  <tom@codesourcery.com>

	PR tree-optimization/68977
	* omp-offload.c (oacc_xform_loop): Handle seen_error () == true.

2016-01-08  Nathan Sidwell  <nathan@acm.org>

	* omp-expand.c (expand_omp_atomic_pipeline): Pay attention to
	LOOPS_HAVE_SIMPLE_LATCHES state.

2016-01-05  Nathan Sidwell  <nathan@codesourcery.com>

	* doc/invoke.texi (fopenacc-dim): Update.
	* omp-offload.c (oacc_parse_default_dims): Update.
	(oacc_validate_dims): Emit warnings about strange
	partitioning choices.

2015-11-03  Tom de Vries  <tom@codesourcery.com>

	* common.opt (foffload-alias): New option.
	* flag-types.h (enum offload_alias): New enum.
	* omp-low.c (install_var_field): Handle flag_offload_alias.
	* doc/invoke.texi (@item Code Generation Options): Add -foffload-alias.
	(@item -foffload-alias): New item.

2015-10-16  Tom de Vries  <tom@codesourcery.com>

	* tree-pretty-print.c (dump_omp_clause): Fix infinite recursion in
	default label.

2015-09-23  Cesar Philippidis  <cesar@codesourcery.com>

	* omp-low.c (lower_omp_for): Remap any variables present in
	OMP_CLAUSE_GANG, OMP_CLAUSE_WORKER, OMP_CLAUSE_VECTOR because they
	will be used later by expand_omp_for.

2015-08-20  Thomas Schwinge  <thomas@codesourcery.com>
	    Joseph Myers  <joseph@codesourcery.com>

	PR libgomp/81886
	* doc/invoke.texi (-ffixed-@var{reg}): Document conflict with
	Fortran options.
	* gcc.c (add_omp_infile_spec_func, spec_lang_mask_accept): New.
	(driver_self_specs): Add spec to use %:add-omp-infile().
	(static_spec_functions): Add add-omp-infile.
	(struct switchstr): Add lang_mask field.  Expand comment.
	(struct infile): Add lang_mask field.
	(add_infile, save_switch, do_spec): Add lang_mask argument.
	(driver_unknown_option_callback, driver_wrong_lang_callback)
	(driver_handle_option, process_command, do_self_spec)
	(driver::do_spec_on_infiles, driver::maybe_run_linker): All
	callers changed.
	(give_switch): Check languages of switch against
	spec_lang_mask_accept.
	(driver::maybe_putenv_OFFLOAD_TARGETS): Don't free
	offload_targets.
	* gcc.h (do_spec): Update prototype.

2015-07-22  Tom de Vries  <tom@codesourcery.com>

	* omp-expand.c (expand_omp_for): Set loop->safelen to INT_MAX if
	marked_independent.

2015-07-14  Chung-Lin Tang  <cltang@codesourcery.com>

	* cfgloop.h (struct loop): Add 'bool marked_independent' field.
	* omp-expand.c (struct omp_region): Add 'int kind' and
	'bool independent' fields.
	(expand_omp_for): Set 'marked_independent' field for loop
	corresponding to region.
	(find_omp_for_region_data): New function.
	(build_omp_regions_1): Set kind field.  Call
	find_omp_for_region_data for GIMPLE_OMP_FOR statements.

2015-07-09  Nathan Sidwell  <nathan@codesourcery.com>

	* tree-ssa-tail-merge.c (same_succ::equal): Add EQ check for
	the gimple statements.

2018-05-07  Cesar Philippidis  <cesar@codesourcery.com>

	* gimplify.c (enum gimplify_omp_var_data): Add GOVD_DEVICETPR.
	(omp_notice_variable): Add GOVD_DEVICEPTR attribute when appropriate.
	(gimplify_scan_omp_clauses): Likewise.
	(gimplify_adjust_omp_clauses_1): Set GOMP_MAP_FORCE_DEVICEPTR for
	implicit deviceptr mappings.

2015-09-29  Tom de Vries  <tom@codesourcery.com>

	* omp-expand.c (expand_omp_for_generic): Only set address taken
	for istart0 and end0 unless necessary.

2015-06-16  Chung-Lin Tang  <cltang@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* omp-expand.c (struct omp_region): Add inside_kernels_p field.
	(expand_omp_for_generic): Adjust to generate a 'sequential' loop
	when GOMP builtin arguments are BUILT_IN_NONE.
	(expand_omp_for): Use expand_omp_for_generic to generate a
	non-parallelized loop for OMP_FORs inside OpenACC kernels regions.
	(expand_omp): Mark inside_kernels_p field true for regions
	nested inside OpenACC kernels constructs.

2015-05-13  Bernd Schmidt  <bernds@codesourcery.com>

	* config/nvptx/nvptx-opts.h: New file.
	* config/nvptx/nvptx.c (nvptx_file_start): Print the correct .target.
	* config/nvptx/nvptx.h: Include "nvptx-opts.h".
	(ASM_SPEC): Define.
	(TARGET_SM35): New macro.
	* config/nvptx/nvptx.md (atomic_fetch_<logic><mode>): Enable with the
	correct predicate.
	* config/nvptx/nvptx.opt (ptx_isa, sm_30, sm_35): New enum and its
	values.
	(misa=): New option.

2015-05-13  Cesar Philippidis  <cesar@codesourcery.com>

	* except.c (finish_eh_generation): Don't finalize exeception
	handlers for functions representing OpenACC offloaded regions.

2015-05-13  Chung-Lin Tang  <cltang@codesourcery.com>

	* omp-low.c (lower_omp_regimplify_p): Adjust re-gimplification
	case.

2015-05-13  Bernd Schmidt  <bernds@codesourcery.com>

	* common.opt (Xoffload): New option.
	* config/nvptx/mkoffload.c (main): Add COLLECT_MKOFFLOAD_OPTIONS.
	* doc/invoke.texi (-Xoffload): Document.
	* gcc.c (mkoffload_options): New static variable.
	(display_help): Mention -Xoffload
	(driver_handle_option): Handle it.
	(add_mkoffload_option): New static function.
	(set_collect_gcc_options): If offloading, set
	COLLECT_MKOFFLOAD_OPTIONS.

2018-05-09  Tom de Vries  <tom@codesourcery.com>

	PR target/85626
	* config/nvptx/nvptx.md (define_insn "trap", define_insn "trap_if_true")
	(define_insn "trap_if_false"): Add exit after trap.

2018-05-05  Tom de Vries  <tom@codesourcery.com>

	PR target/85653
	* config/nvptx/nvptx.c (WORKAROUND_PTXJIT_BUG_3): Define.
	(workaround_barsyncs): New function.
	(nvptx_reorg): Use workaround_barsyncs.
	* config/nvptx/nvptx.md (define_c_enum "unspecv"): Add UNSPECV_MEMBAR.
	(define_expand "nvptx_membar_cta"): New define_expand.
	(define_insn "*nvptx_membar_cta"): New insn.

2018-05-03  Tom de Vries  <tom@codesourcery.com>

	PR testsuite/85106
	* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization
	dump files): Add offload-tree.

2018-05-02  Tom de Vries  <tom@codesourcery.com>

	PR testsuite/85106
	* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization
	dump files): Add ltrans-tree.

2018-05-02  Tom de Vries  <tom@codesourcery.com>

	PR testsuite/85106
	* doc/sourcebuild.texi (Commands for use in dg-final, Scan optimization
	dump files): Add wpa-ipa.

Copyright (C) 2015-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
